{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Django Audio Asset Manager A Django app for managing a database of assets used in audio production. Free software: BSD Repository and Issue Tracker: https://github.com/andrlik/django-audio-asset-manager/ Documentation: https://andrlik.github.io/django-audio-asset-manager/ . Features TODO Developing If you don't already have poetry installed on your system, you can use: $ just poetry-download Then install all the dependencies: $ just setup Run codestyle: $ just codestyle If you want to run safety checks: $ just check-safety If you want to run tests: $ just test If you want to check types: $ just mypy If you want to check everything: $ just lint In order to submit a pull request, it is expected that you've written tests and documentation for your changes, and that running just lint passes without issue. Credits This package was created with Cookiecutter and the andrlik/cookiecutter-poetry-djangopackage template.","title":"Home"},{"location":"#django-audio-asset-manager","text":"A Django app for managing a database of assets used in audio production. Free software: BSD Repository and Issue Tracker: https://github.com/andrlik/django-audio-asset-manager/ Documentation: https://andrlik.github.io/django-audio-asset-manager/ .","title":"Django Audio Asset Manager"},{"location":"#features","text":"TODO","title":"Features"},{"location":"#developing","text":"If you don't already have poetry installed on your system, you can use: $ just poetry-download Then install all the dependencies: $ just setup Run codestyle: $ just codestyle If you want to run safety checks: $ just check-safety If you want to run tests: $ just test If you want to check types: $ just mypy If you want to check everything: $ just lint In order to submit a pull request, it is expected that you've written tests and documentation for your changes, and that running just lint passes without issue.","title":"Developing"},{"location":"#credits","text":"This package was created with Cookiecutter and the andrlik/cookiecutter-poetry-djangopackage template.","title":"Credits"},{"location":"changelog/","text":"Changelog v0.1.0 Inital Release","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v010","text":"Inital Release","title":"v0.1.0"},{"location":"code_of_conduct/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at daniel@andrlik.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of Conduct"},{"location":"code_of_conduct/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"code_of_conduct/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"code_of_conduct/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"code_of_conduct/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"code_of_conduct/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"code_of_conduct/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at daniel@andrlik.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"code_of_conduct/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution"},{"location":"contributing/","text":"How to contribute Contributions to either the code, localization, or the documentation are very welcome! Development task runner We use just to execute common tasks. It is available for any platform. Once installed, you can see a list of available commands by running just --list . Dependencies We use poetry to manage the Python dependencies . If you don't have poetry , you should install with just poetry-download . To install dependencies and prepare pre-commit hooks you would need to run the setup command: just setup To activate your virtualenv run poetry shell . Running updates After pulling new updates from the repository you can quickly install updated dependencies and run database migrations by running just update . Codestyle After installation you may execute code formatting. just codestyle Checks Many checks are configured for this project. To run your test suite: just test To use mypy for type checking run just mypy . Command just check-codestyle will check black, isort and darglint. The just check-safety command will look at the security of your code. To run ALL checks, including test suite, codestyle, mypy, and safety: just lint Before submitting Before submitting your code please do the following steps: Add any changes you want Add tests for the new changes Edit documentation if you have changed something significant Run just codestyle to format your changes. Run just lint to ensure that types, security and docstrings are okay. Add your name to the CONTRIBUTORS.md file. Other help You can contribute by spreading a word about this library. It would also be a huge contribution to write a short article on how you are using this project. You can also share your best practices with us.","title":"Contributing"},{"location":"contributing/#how-to-contribute","text":"Contributions to either the code, localization, or the documentation are very welcome!","title":"How to contribute"},{"location":"contributing/#development-task-runner","text":"We use just to execute common tasks. It is available for any platform. Once installed, you can see a list of available commands by running just --list .","title":"Development task runner"},{"location":"contributing/#dependencies","text":"We use poetry to manage the Python dependencies . If you don't have poetry , you should install with just poetry-download . To install dependencies and prepare pre-commit hooks you would need to run the setup command: just setup To activate your virtualenv run poetry shell .","title":"Dependencies"},{"location":"contributing/#running-updates","text":"After pulling new updates from the repository you can quickly install updated dependencies and run database migrations by running just update .","title":"Running updates"},{"location":"contributing/#codestyle","text":"After installation you may execute code formatting. just codestyle","title":"Codestyle"},{"location":"contributing/#checks","text":"Many checks are configured for this project. To run your test suite: just test To use mypy for type checking run just mypy . Command just check-codestyle will check black, isort and darglint. The just check-safety command will look at the security of your code. To run ALL checks, including test suite, codestyle, mypy, and safety: just lint","title":"Checks"},{"location":"contributing/#before-submitting","text":"Before submitting your code please do the following steps: Add any changes you want Add tests for the new changes Edit documentation if you have changed something significant Run just codestyle to format your changes. Run just lint to ensure that types, security and docstrings are okay. Add your name to the CONTRIBUTORS.md file.","title":"Before submitting"},{"location":"contributing/#other-help","text":"You can contribute by spreading a word about this library. It would also be a huge contribution to write a short article on how you are using this project. You can also share your best practices with us.","title":"Other help"},{"location":"quickstart/","text":"Quickstart A Django app for managing a database of assets used in audio production. Installation Add your installation instructions here. Usage Add practical usage stuff here.","title":"Quickstart"},{"location":"quickstart/#quickstart","text":"A Django app for managing a database of assets used in audio production.","title":"Quickstart"},{"location":"quickstart/#installation","text":"Add your installation instructions here.","title":"Installation"},{"location":"quickstart/#usage","text":"Add practical usage stuff here.","title":"Usage"},{"location":"security/","text":"Security \ud83d\udd10 Reporting Security Issues Do not open issues that might have security implications! It is critical that security related issues are reported privately so we have time to address them before they become public knowledge. Vulnerabilities can be reported by emailing core members: Daniel Andrlik daniel@andrlik.org Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue: Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.) Full paths of source file(s) related to the manifestation of the issue The location of the affected source code (tag/branch/commit or direct URL) Any special configuration required to reproduce the issue Environment (e.g. Linux / Windows / macOS) Step-by-step instructions to reproduce the issue Proof-of-concept or exploit code (if possible) Impact of the issue, including how an attacker might exploit the issue This information will help us triage your report more quickly. Preferred Languages We prefer all communications to be in English.","title":"Security"},{"location":"security/#security","text":"","title":"Security"},{"location":"security/#reporting-security-issues","text":"Do not open issues that might have security implications! It is critical that security related issues are reported privately so we have time to address them before they become public knowledge. Vulnerabilities can be reported by emailing core members: Daniel Andrlik daniel@andrlik.org Please include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue: Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.) Full paths of source file(s) related to the manifestation of the issue The location of the affected source code (tag/branch/commit or direct URL) Any special configuration required to reproduce the issue Environment (e.g. Linux / Windows / macOS) Step-by-step instructions to reproduce the issue Proof-of-concept or exploit code (if possible) Impact of the issue, including how an attacker might exploit the issue This information will help us triage your report more quickly.","title":"\ud83d\udd10 Reporting Security Issues"},{"location":"security/#preferred-languages","text":"We prefer all communications to be in English.","title":"Preferred Languages"}]}