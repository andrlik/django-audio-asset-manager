name: Tests

# Enable Buildkit and let compose use it to speed up image building
#env:
#  DOCKER_BUILDKIT: 1
#  COMPOSE_DOCKER_CLI_BUILD: 1

env:
  DJANGO_DEBUG: True

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**", "README.md"]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**", "README.md" ]


jobs:
  # With no caching at all the entire ci process takes 4m 30s to complete!
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10" ]

    steps:

    - uses: extractions/setup-just@v1

    - name: Checkout Code Repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python${{ matrix.python-version }} -

    - name: Setup cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        just _install
    - name: Test with pytest and do linting, typing, and safety checks.
      run: |
        sqlite3 tests/audio_asset_manager.db '.databases'
        poetry run python manage.py collectstatic --noinput
        just cibuild

    - name: Submit coverage data to coveralls.io
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: "coverage.lcov"
